<?xml version="1.0" encoding="UTF-8" ?>
<!-- xmlns 是xml的命名空间
    要引入新的 context命名空间
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		 http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/context
		 http://www.springframework.org/schema/context/spring-context.xsd">
 
	 <!--开启spring注解，扫描spring注解所在的包 -->
	<!-- <context:component-scan base-package="com.jshx.service"/> -->
	<context:component-scan base-package="com.jshx.dao"/>
	<context:component-scan base-package="com.jshx.redis"/>
	<!-- 导入数据库连接包 -->
	<import resource="spring-jdbc.xml"  />
    <import resource="spring-redis.xml"  />
    
    
    
    
    
    
    <!-- === begin ===下面的配置是直接关联dao和mapper文件，不需要写dao的实现类 -->
    
    <!-- MapperFactoryBean：根据mapper接口生成的代理对象   这里是配置单个mapper（Dao）-->
	<!-- 	<bean id="schoolMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.jshx.dao.SchoolMapper"/>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->

		<!-- 注解扫描配置，扫描包下面的类 -->
        <!-- 注解扫描包 -->
        <context:component-scan base-package="com.jshx.dao2" />
        <!-- 省略其他无关紧要的配置 -->        
        <!-- 配置扫描器，将mybatis接口的实现加入spring中 -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <!-- 扫描所有dao接口的实现，加入到ioc容器中  -->
            <property name="basePackage" value="com.jshx.dao2"></property>
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        </bean>
         <!-- === end === -->
</beans>

